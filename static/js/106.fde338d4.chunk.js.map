{"version":3,"file":"static/js/106.fde338d4.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/MovieDetails.jsx","components/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// Cast.jsx\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=4055b791708338774332fbeb5d716522`);\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCastData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","// MovieDetails.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetailsData = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=4055b791708338774332fbeb5d716522`);\n        const data = await response.json();\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n    setShowReviews(false);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n    setShowCast(false);\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>{movieDetails.title}</h1>\n      <p>({new Date(movieDetails.release_date).getFullYear()})</p>\n      <p>User Score: {movieDetails.vote_average}</p>\n      <p>Overview: {movieDetails.overview}</p>\n      <p>Genres: {movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n      <img src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`} alt={movieDetails.title} />\n\n      <div>\n        <button onClick={toggleCast}>Cast</button>\n        <button onClick={toggleReviews}>Reviews</button>\n      </div>\n\n      {showCast && <Cast movieId={movieId} />}\n      {showReviews && <Reviews movieId={movieId} />}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","// Reviews.jsx\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviewsData = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=4055b791708338774332fbeb5d716522`);\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There are no reviews.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCastData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","name","id","useParams","movieDetails","setMovieDetails","_useState3","_useState4","showCast","setShowCast","_useState5","_useState6","showReviews","setShowReviews","fetchMovieDetailsData","title","Date","release_date","getFullYear","vote_average","overview","genres","genre","join","src","poster_path","alt","onClick","Cast","Reviews","reviews","setReviews","fetchReviewsData","results","length","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}